 CREATE OR REPLACE PROCEDURE ADD_NOVO_JOGADOR
(
    JOGADOR_ID_IN IN NUMBER, 
    JOGADOR_NAME_IN IN VARCHAR2,
    JOGADOR_POS_IN IN NUMBER,
    JOGADOR_APELIDO_IN IN VARCHAR2)

IS
BEGIN
    INSERT INTO JOGADOR
    (ID_JOGADOR, NOME, POSICAO, NICKNAME)
    VALUES
    (JOGADOR_ID_IN, JOGADOR_NAME_IN , JOGADOR_POS_IN, JOGADOR_APELIDO_IN);

EXCEPTION
    WHEN DUP_VAL_ON_INDEX THEN 
        RAISE_APPLICATION_ERROR(-20001, 'CÓDIGO DO JOGADOR DUPLICADO!');
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20002,'ALGUM ERRO ACONTECEU NA INSERÇÃO DO JOGADOR');
END;

-- Executando:
SELECT * FROM JOGADOR;
EXEC ADD_NOVO_JOGADOR(4,'JOGADOR 4', 1, 'APELIDO 4');

-- Criando Trigger
CREATE TABLE TB_LOG(
    DATA_LOG TIMESTAMP DEFAULT SYSDATE,
    USER_LOG VARCHAR2(30),
    DESC_LOG VARCHAR2(300),
);

    CREATE OR REPLACE TRIGGER TG_JOGADOR
    AFTER INSERT OR DELETE OR UPDATE ON JOGADOR
    FOR EACH ROW
    ENABLE

    DECLARE 
        V_USER VARCHAR2(30);
    BEGIN
    SELECT USER INTO V_USER FROM DUAL;

    IF INSERTING THEN
        INSERT INTO TB_LOG(USER_LOG, DESC_LOG) VALUES (V_USER, 'REGISTRO INSERIDO');
    ELSIF DELETING THEN
        INSERT INTO TB_LOG(USER_LOG, DESC_LOG) VALUES (V_USER, 'REGISTRO DELETADO');
    ELSIF UPDATING THEN
        INSERT INTO TB_LOG(USER_LOG, DESC_LOG) VALUES (V_USER, 'REGISTRO 
        ALTERADO');
    END IF
END;

-- Executando e alterando os comandos.
SELECT * FROM JOGADOR;
SELECT * FROM TB_LOG;
EXEC ADD_NOVO_JOGADOR(7,'JOGADOR 7',1,'APELIDO');

UPDATE JOGADOR 
SET NOME = 'NOVO JOGADOR'
WHERE ID_JOGADOR = 7;

DELETE FROM JOGADOR
WHERE ID_JOGADOR = 7;

-- Exemplo criação de uma Function

CREATE OR REPLACE FUNCTION PRIMEIRO_NOME_FUNC
RETURN VARCHAR2
IS 
    V_EMP_NOME VARCHAR2(100);

BEGIN  
    SELECT FIRST_NAME INTO V_EMP_NOME
    FROM HR.EMPLOYEES
    WHERE EMPLOYEE_ID = 105;

    RETURN V_EMP_NOME;
END;

-- Executando a Function
SELECT PRIMEIRO_NOME_FUNC FROM DUAL;



